CREATE TABLE TBL_AUTHOR
(
AUTHOR_ID INT PRIMARY KEY,
AUTHOR_NAME VARCHAR(MAX),
COUNTRY VARCHAR(MAX)
)
CREATE TABLE TBL_BOOK
(
BOOK_ID INT PRIMARY KEY,
BOOK_TITLE VARCHAR(MAX),
AUTHORID INT
FOREIGN KEY (AUTHORID) REFERENCES TBL_AUTHOR(AUTHOR_ID)
)
INSERT INTO TBL_AUTHOR VALUES(101,'JAMES CLEAR','GERMANY')
INSERT INTO TBL_AUTHOR VALUES(102,'DENNY','CANADA')
INSERT INTO TBL_AUTHOR VALUES(103,'JASON FRIED','AUSTRALIA')

INSERT INTO TBL_BOOK VALUES(56789,'REWORK', 101)
INSERT INTO TBL_BOOK VALUES(56790,'ALL AND ABOUT', 102)
INSERT INTO TBL_BOOK VALUES(56791,'THE ART', 103)

SELECT B.BOOK_TITLE, A.AUTHOR_NAME, A.COUNTRY
FROM TBL_AUTHOR AS A
INNER JOIN
TBL_BOOK AS B
ON A.AUTHOR_ID = B.AUTHORID

/*
NOTES.
	DQL - DATA QUERY LANG - SELECT
	DDL:  SCEHEMA / STRUCTURE
		CREATE, ALTER, DROP, TRUNCATE, RENAME
	DML: INSERT, UPDATE, DELETE
	DCL: DATA CONTROL LANGUAGE
		GRANT AND REVOKE

		
	GRANT PERMISSION/PRIV ON TBL_NAME TO USER_NAME
	GRANT SELECT, UPDATE ON EMP TO ALOK_04

	REVOKE UPDATE ON EMP FROM ALOK_04

	----------------------------------------------------------
	UPDATE STUDENTS SET SNAME  = 'A' WHERE SID = 2

	BEGIN TRANSACTION
		UPDATE STUDENTS SET SNAME  = 'A' WHERE SID = 2

		COMMIT

		ROLLBACK

		SAVEPOINT / CHECKPOINT

	TCL: 
*/
/*
	QUESTION.
		1. TABLE CREATION
		PS: CREATE A TABLE EMPLOYEE (EMP_ID, EMP_NAME)
		EMP_ID WILL START FROM 101 AUTOMATICALLY, WITH A JUMP
		OF 2.

		EMP_ID    EMP_NAME
		  101         A
		  103         B
*/

CREATE TABLE TBL_EMP
(
EMP_ID INT IDENTITY(101,2),
EMP_NAME VARCHAR(MAX)
)

INSERT INTO TBL_EMP(EMP_NAME) VALUES('A')
INSERT INTO TBL_EMP(EMP_NAME) VALUES('B')
SELECT * FROM TBL_EMP